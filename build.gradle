plugins {
    id "application"
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

ext.antlr3Version = '3.5.3'
ext.antlr4Version = '4.9.3' // Newer versions only for Java 11+
ext.asmVersion = '9.5'
ext.baksmaliVersion = '2.5.2'
ext.commonsCompressVersion = '1.22'
ext.jUnitVersion = '5.9.2'
ext.r8Version = '4.0.52'

allprojects {
    group = 'com.rollr.d2j'
    version = '2.1-SNAPSHOT'

    repositories {
        mavenCentral()
        google()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    sourceCompatibility = targetCompatibility = 1.8

    dependencies {
        implementation fileTree(dir: 'libs', include: '*.jar')
        testImplementation "org.junit.jupiter:junit-jupiter-api:${project.property('jUnitVersion')}"
        testImplementation "org.junit.jupiter:junit-jupiter-params:${project.property('jUnitVersion')}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${project.property('jUnitVersion')}"
    }

    [compileJava, compileTestJava]*.options.collect { options -> options.encoding = 'UTF-8' }

    test {
        useJUnitPlatform()

        systemProperty 'junit.jupiter.execution.parallel.enabled', true
        systemProperty 'junit.jupiter.execution.parallel.mode.default', 'concurrent'
    }

    // Cache list of tasks
    project.getAllTasks(true)

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
        repositories {
            maven {
                url = uri('https://maven.rollr.com/snapshots')
                credentials {
                    username = System.getenv("MAVEN_USERNAME")
                    password = System.getenv("MAVEN_PASSWORD")
                }
            }
        }
    }
}

mainClassName = "com.googlecode.dex2jar.tools.Dex2jarCmd"
archivesBaseName = "dex2jar"

dependencies {
    implementation project(':dex-tools')
}

shadowJar {
    archiveClassifier.set(null)
    archiveVersion.set("")
}
